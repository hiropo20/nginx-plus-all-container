
    server {
        listen 8080;
        proxy_http_version 1.1;

        location / {
          # resply req header information
          content_by_lua_block {
            ngx.header.content_type = 'text/html'
            local h, err = ngx.req.get_headers()
            if err == "truncated" then
                ngx.say("get_header error.")
                ngx.exit(500)
                return
            end

            local res = "<html><head> <title>Request Header Responce</title> </head> <body>"
            for k, v in pairs(h) do
                res = res.."\""..k.."\":".."\""..v.."\"<br>"
            end
            res = res.."</body></html>"
            ngx.say(res)
          }
        }
        location /wait {
          content_by_lua_block {

            local args, err = ngx.req.get_uri_args()
   
            if err == "truncated" then
                -- one can choose to ignore or reject the current request here
            end
   
            local sec = 1
            for key, val in pairs(args) do
                if key == "sec" then
                  if tonumber(val) then
                    sec = tonumber(val) 
                  end
                end
            end

            ngx.say("sec:",sec)
            ngx.sleep(sec)
            ngx.say("wait ", sec, "sec")
          }

        }

        location /api {
            api write=on;
            # directives limiting access to the API
        }

        location = /dashboard.html {
            root   /usr/share/nginx/html;
        }
    }